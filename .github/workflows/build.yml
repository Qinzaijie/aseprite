name: build
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest ]
        build_type: [Release]
        ui: [gui, cli]
        scripting: [lua, noscripts]
        exclude:
          - build_type: Debug
            ui: gui
          - build_type: RelWithDebInfo
            ui: cli
          - build_type: RelWithDebInfo
            scripting: noscripts
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Install Dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          libpixman-1-dev libfreetype6-dev libharfbuzz-dev zlib1g-dev \
          libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev
    - name: Install Skia
      if: ${{ matrix.ui == 'gui' }}
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]] ; then
          choco install wget -y --no-progress
          wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Windows-Release-x64.zip
          unzip Skia-Windows-Release-x64.zip -d skia
        elif [[ "${{ runner.os }}" == "macOS" ]] ; then
          wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-macOS-Release-arm64.zip
          unzip Skia-macOS-Release-arm64.zip -d skia
        else
          wget https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Linux-Release-x64-libstdc++.zip
          unzip Skia-Linux-Release-x64-libstdc++.zip -d skia
        fi
    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      with:
        key: ${{ matrix.os }}-${{ matrix.ui }}-${{ matrix.scripting }}-${{ matrix.build_type }}
    - uses: aseprite/get-ninja@main
    - uses: ilammy/msvc-dev-cmd@v1
如果: runner.os =='视窗'
    - 名字: 生成生成文件
壳: 尝试
奔跑: |
if[[" $ { { runner . OS } } " = = " Windows "]]；然后
导出enable_ccache=off
其他
导出enable_ccache=on
船方不负担装货费用

if[[" $ { { matrix . ui } } " = = " GUI "]]；然后
导出laf_backend=skia
其他
导出laf _ backend =无
船方不负担装货费用

if[[" $ { { matrix . scripting } } " = = " Lua "]]；然后
导出enable_scripting=on
其他
导出enable_scripting=off
船方不负担装货费用

if[[" $ { { runner . OS } } " = = " MAC OS "]]；然后
export skia_arch=arm64
其他
export skia_arch=x64
船方不负担装货费用

cmake -S . -B build -G忍者\
-DC make _ BUILD _ TYPE = $ { { matrix . BUILD _ TYPE } } \
-DC make _ OSX _部署_目标=10.9 \
-DENABLE_TESTS=ON \
-den able _ SCRIPTING = $ enable _ SCRIPTING \
-den able _ CCACHE = $ enable _ CCACHE \
-DLAF后端=$laf后端\
-DSKIA_DIR=skia \
-DSKIA _ LIBRARY _ DIR = skia/out/Release-$ skia _ arch
    - 名字: 收集
壳: 尝试
奔跑: |
cd版本&忍者
   - 使用: 动作/上传-工件@v3
随着:
名字: 无菌晶体
小路: |
data脚本/a脚本/build/bin/data
d:/a/a script/a script/build/bin/a script . exe
